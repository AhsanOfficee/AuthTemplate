
Input Validation Format
-----------------------
export const updateInputValidation = async (
  req: Request,
  res: Response,
  next: NextFunction
) => {
  console.debug(
    COLOR_CONSOLE.DARK_GREEN,
    API_CONSOLE.INPUT_VALIDATION_CALLED,
    API_CONSOLE.API_REQ_METHOD,
    req.method,
    API_CONSOLE.API_REQ_FULL_ENDPOINT,
    req.originalUrl
  );
  console.debug("Req Body: ", req.body);

  try {
    z.object({
      name: z.string().min(1, ZOD_FIELDS.NAME).optional(),
    }).parse(req.body);
    
    next();
  } catch (error) {
    errorHandler(res, error);
  }
};


Api Validation Format
-----------------------
export const signUpApiValidation: (
  req: Request,
  res: Response,
  next: NextFunction,
) => any = async (req: Request, res: Response, next: NextFunction) => {
  try {
    console.debug(
      COLOR_CONSOLE.DARK_GREEN,
      API_CONSOLE.API_VALIDATION_CALLED,
      API_CONSOLE.API_REQ_METHOD,
      req.method,
      API_CONSOLE.API_REQ_FULL_ENDPOINT,
      req.originalUrl,
    );

    next();
  } catch (error) {
    errorHandler(res, error);
  }
};


Api Format
----------
export const update = async (req: Request, res: Response) => {
  console.debug(
    COLOR_CONSOLE.DARK_GREEN,
    API_CONSOLE.API_CALLED,
    API_CONSOLE.API_REQ_METHOD,
    req.method,
    API_CONSOLE.API_REQ_FULL_ENDPOINT,
    req.originalUrl
  );
  try {
    const transaction = await db.sequelize.transaction();
    const postData = req.body;
  } catch (error) {
    errorHandler(res, error);
  }
};
